/*
 * IotHub Gateway Service APIs
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Service
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuthenticationMechanism {
    #[serde(rename = "symmetricKey", skip_serializing_if = "Option::is_none")]
    symmetric_key: Option<::models::SymmetricKey>,
    #[serde(rename = "x509Thumbprint", skip_serializing_if = "Option::is_none")]
    x509_thumbprint: Option<::models::X509Thumbprint>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    _type: Option<String>,
}

impl AuthenticationMechanism {
    pub fn new() -> AuthenticationMechanism {
        AuthenticationMechanism {
            symmetric_key: None,
            x509_thumbprint: None,
            _type: None,
        }
    }

    pub fn set_symmetric_key(&mut self, symmetric_key: ::models::SymmetricKey) {
        self.symmetric_key = Some(symmetric_key);
    }

    pub fn with_symmetric_key(
        mut self,
        symmetric_key: ::models::SymmetricKey,
    ) -> AuthenticationMechanism {
        self.symmetric_key = Some(symmetric_key);
        self
    }

    pub fn symmetric_key(&self) -> Option<&::models::SymmetricKey> {
        self.symmetric_key.as_ref()
    }

    pub fn reset_symmetric_key(&mut self) {
        self.symmetric_key = None;
    }

    pub fn set_x509_thumbprint(&mut self, x509_thumbprint: ::models::X509Thumbprint) {
        self.x509_thumbprint = Some(x509_thumbprint);
    }

    pub fn with_x509_thumbprint(
        mut self,
        x509_thumbprint: ::models::X509Thumbprint,
    ) -> AuthenticationMechanism {
        self.x509_thumbprint = Some(x509_thumbprint);
        self
    }

    pub fn x509_thumbprint(&self) -> Option<&::models::X509Thumbprint> {
        self.x509_thumbprint.as_ref()
    }

    pub fn reset_x509_thumbprint(&mut self) {
        self.x509_thumbprint = None;
    }

    pub fn set__type(&mut self, _type: String) {
        self._type = Some(_type);
    }

    pub fn with__type(mut self, _type: String) -> AuthenticationMechanism {
        self._type = Some(_type);
        self
    }

    pub fn _type(&self) -> Option<&String> {
        self._type.as_ref()
    }

    pub fn reset__type(&mut self) {
        self._type = None;
    }
}
