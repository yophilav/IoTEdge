/*
 * IotHub Gateway Service APIs
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Service
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ConfigurationBodyQuery {
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    target: Option<String>,
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    query: Option<String>,
}

impl ConfigurationBodyQuery {
    pub fn new() -> ConfigurationBodyQuery {
        ConfigurationBodyQuery {
            target: None,
            query: None,
        }
    }

    pub fn set_target(&mut self, target: String) {
        self.target = Some(target);
    }

    pub fn with_target(mut self, target: String) -> ConfigurationBodyQuery {
        self.target = Some(target);
        self
    }

    pub fn target(&self) -> Option<&String> {
        self.target.as_ref()
    }

    pub fn reset_target(&mut self) {
        self.target = None;
    }

    pub fn set_query(&mut self, query: String) {
        self.query = Some(query);
    }

    pub fn with_query(mut self, query: String) -> ConfigurationBodyQuery {
        self.query = Some(query);
        self
    }

    pub fn query(&self) -> Option<&String> {
        self.query.as_ref()
    }

    pub fn reset_query(&mut self) {
        self.query = None;
    }
}
