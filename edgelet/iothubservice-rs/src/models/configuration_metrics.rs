/*
 * IotHub Gateway Service APIs
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Service
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ConfigurationMetrics : Configuration Metrics

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ConfigurationMetrics {
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    results: Option<::std::collections::HashMap<String, i64>>,
    #[serde(rename = "queries", skip_serializing_if = "Option::is_none")]
    queries: Option<::std::collections::HashMap<String, String>>,
}

impl ConfigurationMetrics {
    /// Configuration Metrics
    pub fn new() -> ConfigurationMetrics {
        ConfigurationMetrics {
            results: None,
            queries: None,
        }
    }

    pub fn set_results(&mut self, results: ::std::collections::HashMap<String, i64>) {
        self.results = Some(results);
    }

    pub fn with_results(
        mut self,
        results: ::std::collections::HashMap<String, i64>,
    ) -> ConfigurationMetrics {
        self.results = Some(results);
        self
    }

    pub fn results(&self) -> Option<&::std::collections::HashMap<String, i64>> {
        self.results.as_ref()
    }

    pub fn reset_results(&mut self) {
        self.results = None;
    }

    pub fn set_queries(&mut self, queries: ::std::collections::HashMap<String, String>) {
        self.queries = Some(queries);
    }

    pub fn with_queries(
        mut self,
        queries: ::std::collections::HashMap<String, String>,
    ) -> ConfigurationMetrics {
        self.queries = Some(queries);
        self
    }

    pub fn queries(&self) -> Option<&::std::collections::HashMap<String, String>> {
        self.queries.as_ref()
    }

    pub fn reset_queries(&mut self) {
        self.queries = None;
    }
}
