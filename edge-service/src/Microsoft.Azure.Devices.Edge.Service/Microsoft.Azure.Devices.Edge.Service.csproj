<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <Configurations>Debug;Release;CodeCoverage</Configurations>
  </PropertyGroup>

  <!--
    Normally, the 'Debug' configuration would work for code coverage, but Microsoft.CodeCoverage currently requires '<DebugType>full</DebugType>' for .NET Core.
    See https://github.com/Microsoft/vstest-docs/blob/06f9dc0aeb47be7204dc4e1a98c110ead3e978c7/docs/analyze.md#setup-a-project.
    That setting seems to break the "Open Test" context menu in VS IDE, so we'll use a dedicated configuration for code coverage.
    -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'CodeCoverage|AnyCPU' ">
    <IntermediateOutputPath>obj\CodeCoverage</IntermediateOutputPath>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\CodeCoverage</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\edge-agent\src\Microsoft.Azure.Devices.Edge.Agent.Service\Microsoft.Azure.Devices.Edge.Agent.Service.csproj" />
    <ProjectReference Include="..\..\..\edge-hub\src\Microsoft.Azure.Devices.Edge.Hub.Service\Microsoft.Azure.Devices.Edge.Hub.Service.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="../../docker*/**/*.*" CopyToPublishDirectory="Always">
        <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="../../../edge-hub/src/Microsoft.Azure.Devices.Edge.Hub.Service/scripts/linux/generate-cert.sh" CopyToPublishDirectory="Always">
        <Link>scripts/linux/generate-cert.sh</Link>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="scripts\linux\start-edge-service.sh">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="scripts\linux\deploy.sh">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Update="scripts\windows\deploy.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="scripts\windows\start.cmd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Content Update="..\..\docker\linux\amd64\Dockerfile">
      <Link>linux\amd64\Dockerfile</Link>
    </Content>
    <Content Update="..\..\docker\linux\arm32v7\Dockerfile">
      <Link>linux\arm32v7\Dockerfile</Link>
    </Content>
    <Content Update="..\..\docker\windows\amd64\Dockerfile">
      <Link>windows\amd64\Dockerfile</Link>
    </Content>
  </ItemGroup>
</Project>
