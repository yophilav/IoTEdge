trigger: none
pr: none

jobs:
################################################################################
  - job: linux_arm32
################################################################################
    displayName: Linux ARM32 Base Image Publication
    pool:
      name: $(pool.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals ARM
        - agent-osbits -equals 32
        - run-base-image-release -equals true
        - false

    variables:
      os: linux
      arch: arm32v7

    steps:
    - pwsh: |
        # Get the version from each file location
        # EdgeAgent (azureiotedge-agent-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-agent/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $edgeAgentTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-agent-base:$edgeAgentTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=edgeAgentTag]$edgeAgentTag"

        # EdgeHub (azureiotedge-hub-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-hub/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $edgeHubTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-hub-base:$edgeHubTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=edgeHubTag]$edgeHubTag"

        # TempSensor (azureiotedge-module-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-modules/SimulatedTemperatureSensor/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $moduleTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-module-base:$moduleTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=moduleTag]$moduleTag"

        # Test Analyzer (azureiotedge-module-base-full)
        $pathPrefix = '$(Build.SourcesDirectory)/test/modules/TestAnalyzer/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $fullModuleTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-module-base-full:$fullModuleTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=fullModuleTag]$fullModuleTag"

      displayName: Overview ARM32
      name: overview
    - template: ../e2e/templates/e2e-clean-directory.yaml

################################################################################
  - job: linux_arm64
################################################################################
    displayName: Linux ARM64 Base Image Publication
    pool:
      name: $(pool.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals ARM64
        - agent-osbits -equals 64
        - run-base-image-release -equals true

    variables:
      os: linux
      arch: arm64v8

    steps:
    - pwsh: |
        # Get the version from each file location
        # EdgeAgent (azureiotedge-agent-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-agent/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $edgeAgentTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-agent-base:$edgeAgentTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=edgeAgentTag]$edgeAgentTag"

        # EdgeHub (azureiotedge-hub-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-hub/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $edgeHubTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-hub-base:$edgeHubTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=edgeHubTag]$edgeHubTag"

        # TempSensor (azureiotedge-module-base)
        $pathPrefix = '$(Build.SourcesDirectory)/edge-modules/SimulatedTemperatureSensor/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $moduleTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-module-base:$moduleTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=moduleTag]$moduleTag"

        # Test Analyzer (azureiotedge-module-base-full)
        $pathPrefix = '$(Build.SourcesDirectory)/test/modules/TestAnalyzer/docker/$(os)/$(arch)'
        $unberlyingFilePath = $pathPrefix + '/base/Dockerfile' | Resolve-path
        $underlyingTag = $($(Get-Content $unberlyingFilePath | Select-String "ARG base_tag=") -split "=")[1]
        $imageFilePath = $pathPrefix + '/Dockerfile' | Resolve-path
        $fullModuleTag = $($(Get-Content $imageFilePath | Select-String "ARG base_tag=") -split "=")[1]
        Write-Output "azureiotedge-module-base-full:$fullModuleTag <= $underlyingTag"
        Write-Output "##vso[task.setvariable variable=fullModuleTag]$fullModuleTag"

      displayName: Overview ARM64
      name: overview
    - template: ../e2e/templates/e2e-clean-directory.yaml