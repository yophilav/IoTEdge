trigger: none
pr: none

variables:
  DisableDockerDetector: true

stages:
  - stage: PublishArtifact
    displayName: Publish Artifacts
    jobs:
    - job: downloadArtifacts
      displayName: Release Agent Setup
      strategy:
        matrix:
          Ubuntu2004-amd64:
            pool_name: 'Azure-IoT-Edge-1ES-Hosted-Linux'
            agent_demands: 'ImageOverride -equals agent-aziotedge-ubuntu-20.04-msmoby'
            os: ubuntu20.04
            arch: amd64
            ext: deb
            artifactName: iotedged-ubuntu20.04-amd64
            identityServiceArtifactName: packages_ubuntu-20.04_amd64
            identityServicePackageFilter: aziot-identity-service_*_amd64.deb
            # identityServicePackageFilter: aziot-identity-service_*_amd64.deb
            # Proper  name: aziot-identity-service_1.4.0~dev-1_amd64.deb
      pool:
        name: $(pool_name)
        demands:
        - $(agent_demands)
      steps:
      - checkout: self
      - script: |
          # Install pip
          echo "Installing pipx"
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install --index-url https://packages.microsoft.com/pmc-cli/simple/ "pmc-cli>=0.1.0"
          echo "Finished installing pipx"
          echo ""

          # Download artifact
          echo "Downloading IIS artifact"
          wget "https://github.com/Azure/azure-iotedge/releases/download/1.4.9/aziot-identity-service_1.4.3-1_ubuntu20.04_amd64.deb" -O "$(System.ArtifactsDirectory)/aziot-identity-service_1.4.3-1_ubuntu20.04_amd64.deb"
          echo ""
          echo "Finished downloading IIS artifact"
          ls -la "$(System.ArtifactsDirectory)"
        name: SetupAgent
        displayName: Setup Agent

      - script: |
          #Download Secrets - Requires az login and proper subscription to be selected
          echo "Downloading PMC prod cert"
          WDIR="$HOME/.config/pmc/"
          CERT_FILE="$WDIR/private-key.pem"
          SETTING_FILE="$WDIR/settings.toml"

          echo "Downloading PMC prod cert"
          az keyvault secret download --vault-name iotedge-packages -n private-key-pem -f $CERT_FILE
          echo "Downloading PMC setting file"
          az keyvault secret download --vault-name iotedge-packages -n pmc-v4-settings -f $SETTING_PATH

          #Replace Server Name and Absolute Path of Private-key.pem and replace json
          echo "Update setting with the installed certificate path"
          sed -i -e "s@PROD_CERT_PATH@$CERT_FILE@g" "$SETTING_FILE"
          cat $SETTING_FILE
        name: CertSetup
        displayName: Certificate Setup

